<div class="glove-layout-wrapper">
  <div class="glove-column">
    <div class="product-header">
      <div class="product-info-box">
        <h1 class="product-title">Sir Bloody Miami Darryl Figure</h1>
        <div class="product-price">$278.00 USD</div>
        <div class="free-delivery-message">Free Shipping On All Orders</div>
      </div>
    </div>

    <div class="glove-options product-form__input--pill">
      <input type="radio" id="glove-pandora" name="glove" value="pandora" checked>
      <label for="glove-pandora">Pandora's Box</label>
      <input type="radio" id="glove-vice" name="glove" value="vice">
      <label for="glove-vice">Vice</label>
      <input type="radio" id="glove-hedge" name="glove" value="hedge">
      <label for="glove-hedge">Hedge Maze</label>
    </div>

  <!-- replace your current .quantity-selector inner HTML with this -->
<div class="quantity-selector">
  <div class="quantity-label">Quantity</div>
  <div class="quantity-controls">
    <button type="button" class="quantity-btn" id="qty-decrease" disabled>−</button>
    <span        class="quantity-value" id="qty-value">1</span>
    <button type="button" class="quantity-btn" id="qty-increase">+</button>
  </div>
</div>

    <div class="preorder-buttons">
      <button class="btn-preorder">Pre-Order</button>
      <button class="btn-crypto">Pre-Order With Crypto &amp; Save $30</button>
    </div>

    <div class="limited-edition-badge">
      <div class="limited-flash">
        <span class="gold-star">★</span>
        <span class="limited-text">LIMITED EDITION</span>
      </div>
      <div class="subtext">
        Only 1000 will ever exist, each marked with a unique number.
      </div>
    </div>
  </div>

  <div class="glove-viewer">
    <div id="viewer-container" class="viewer-container">
      <img id="viewer-img" src="https://cdn.shopify.com/s/files/1/0745/6482/9415/files/MiamiDarrylFigurine_PandorasBox_1.jpg?v=1750332619" alt="Figurine Image" class="viewer-img" loading="eager" />
  <!-- ─── change TO ─── -->
<div class="viewer-controls">
  <!-- overlay arrows (show on hover) -->
  <button id="prevBtn" class="overlay-nav arrow-left"  aria-label="Previous image">‹</button>
  <button id="nextBtn" class="overlay-nav arrow-right" aria-label="Next image">›</button>

  <!-- progress pills -->
  <div id="dotContainer" class="dot-container"></div>
</div>\

    </div>

    <div class="viewer-info-container">
      <div class="viewer-info-display">
        <div class="preview-title">View Figure With:</div>
        <span id="prevName" class="blurred-name clickable-name"></span>
        <span id="currentName" class="active-name clickable-name"></span>
        <span id="nextName" class="blurred-name clickable-name"></span>
      </div>

      <div class="figure-info">
        <div class="figure-text">Figure Includes All Accessories</div>
        <img id="accessory-img" class="glove-image" src="https://cdn.shopify.com/s/files/1/0745/6482/9415/files/MMiamiDarrylFigurine_Accessories_1.jpg?v=1750332832" />
      </div>
    </div>

    <div id="lightbox" class="lightbox">
      <span class="close-lightbox" onclick="closeLightbox()">×</span>
      <div class="lightbox-content">
        <img id="lightbox-img" src="" alt="Large View" />
        <div class="lightbox-instruction">← Use Arrow Keys →</div>
      </div>
    </div>
  </div>
</div>

<style>
/* ─── product info box ─── */
.product-info-box {
  background: transparent;
  padding: 0 0 1rem;             /* add bottom padding to space the divider */
  border-radius: 0;
  width: calc(100% + 19rem);
  max-width: 480px;
  margin-left: -16rem;           /* ← keep alignment with quantity */
  min-width: unset;
  border-bottom: 1px solid #000; /* identical 1px divider */
  margin-bottom: 1.5rem;
  box-sizing: border-box;
  transform: none;
}


/* free delivery message */
.free-delivery-message {
  font-size: 1.6rem;
  font-weight: 600;
  color: #2CA305;
  font-family: 'Inter', sans-serif;
}

.limited-edition-badge {
  display: inline-block;
  margin: 2rem 0;                     /* top & bottom space, no side auto-centering */
  padding: 12px 20px;
  border-radius: 6px;
  background: linear-gradient(135deg, #f6e27a, #d4af37, #cfae56);
  text-align: center;
  width: 480px;                       /* same width as Pre-Order buttons */
  max-width: 480px;
  min-width: 0;                       /* override old 300 px minimum */
  box-sizing: border-box;
  border: 1px solid #bcbcbc;
  overflow: hidden;
  /* shift left by the same amount the buttons were shifted with margin-left */
  transform: translateX(-6.5rem);    /* no scale, just a horizontal nudge */
}

.limited-flash {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 10px;
}
.gold-star {
  font-size: 18px;
  font-weight: bold;
  margin-right: 8px;
  color: #b8860b;
  animation: star-rotate 6s linear infinite;
  text-shadow: 0 0 4px #b8860b;
}
.limited-text {
  font-weight: bold;
  font-size: 14px;
  white-space: nowrap;
  color: #b8860b;
  animation: flashbang 1.5s ease-in-out infinite;
  text-shadow: 0 0 4px #b8860b;
}
.subtext {
  font-style: italic;
  font-size: 14px;
  color: #000;
  white-space: nowrap;
}
@keyframes star-rotate {
  0% { transform: rotate(0deg); }
  20%, 80% { transform: rotate(360deg); }
  100% { transform: rotate(360deg); }
}
@keyframes flashbang {
  0%   { filter: brightness(100%); color: #b8860b; text-shadow: 0 0 4px #b8860b; }
  25%  { filter: brightness(130%); color: #ffcc00; text-shadow: 0 0 8px #ffd700, 0 0 16px #ffdd55; }
  50%  { filter: brightness(170%); color: #ffcc00; text-shadow: 0 0 12px #fff176, 0 0 20px #fff59d; }
  75%  { filter: brightness(130%); color: #ffcc00; text-shadow: 0 0 8px #ffd700, 0 0 16px #fff3b0; }
  100% { filter: brightness(100%); color: #b8860b; text-shadow: 0 0 4px #b8860b; }
}
.limited-edition-badge:hover .gold-star,
.limited-edition-badge:hover .limited-text, {
  animation: none !important;
}

@keyframes rgb-flash {
  0%   { color: red;    filter: drop-shadow(0 0 5px red); }
  14%  { color: orange; filter: drop-shadow(0 0 6px orange); }
  28%  { color: yellow; filter: drop-shadow(0 0 7px yellow); }
  42%  { color: green;  filter: drop-shadow(0 0 6px green); }
  56%  { color: blue;   filter: drop-shadow(0 0 7px blue); }
  70%  { color: indigo; filter: drop-shadow(0 0 6px indigo); }
  84%  { color: violet; filter: drop-shadow(0 0 7px violet); }
  100% { color: #b8860b; filter: drop-shadow(0 0 5px #b8860b); }
}

/* lightbox content */
.lightbox-content {
  position: relative;
  max-width: 90%;
  max-height: 90%;
}
.lightbox-instruction {
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  color: #000000;
  font-size: 1.8rem;
  font-weight: 600;
  pointer-events: none;
  text-shadow: 0 0 6px rgba(0,0,0,0.6);
}

/* product details header */
.product-details-header {
  align-self: flex-start;
  width: 100%;
  max-width: 480px;
  margin-bottom: 1.5rem;
  transform: translateX(-10rem);
}
.product-title {
  font-size: 3.2rem;
  font-weight: 600;
  font-family: 'Inter', sans-serif;
  color: #000;
  margin-bottom: 0.8rem;
  letter-spacing: -0.5px;
  white-space: nowrap;
}
.product-price {
  font-size: 2.4rem;
  font-weight: 700;
  font-family: 'Inter', sans-serif;
  color: #54504f;
  font-style: italic;
  margin-bottom: 0.8rem;
}

/* hide right-side info panel */
.viewer-info-container,
.figure-info {
  display: none !important;
}
.viewer-info-display {
  display: flex;
  flex-direction: column;
  gap: 0.8rem;
  font-size: 2.2rem;
  font-weight: 800;
  font-family: 'Inter', sans-serif;
  color: #111;
  text-align: center;
  white-space: nowrap;
  overflow: visible;
  text-overflow: unset;
  width: 100%;
  max-width: 100%;
  margin-left: 0;
  margin-top: -10rem;
}

/* image gallery */
.glove-gallery {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.5rem;
  margin: 0 auto;
  max-width: 1100px;
}
.figure-text {
  font-size: 2.2rem;
  font-weight: 800;
  color: #54504f;
  font-family: 'Inter', sans-serif;
  margin-bottom: 1rem;
  padding-bottom: 0.5rem;
  border-bottom: 2px solid #000000;
}
.glove-image {
  width: 100%;
  height: 480px;
  object-fit: cover;
  border-radius: 12px;
  border: 2px solid #eee;
  transition: all 0.3s ease;
  cursor: pointer;
}
.glove-image:hover {
  transform: scale(1.03);
  border-color: #ddd;
  box-shadow: 0 6px 16px rgba(0,0,0,0.1);
}
@media (max-width: 900px) {
  .glove-gallery { gap: 1rem; }
  .glove-image { height: 300px; }
}

/* lightbox */
.lightbox {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.9);
  z-index: 1000;
  align-items: center;
  justify-content: center;
}
.lightbox.active { display: flex; }
.lightbox-content img {
  max-width: 100%;
  max-height: 90vh;
  border-radius: 8px;
  box-shadow: 0 0 30px rgba(0,0,0,0.6);
  transition: transform 0.4s ease, transform-origin 0.4s ease;
}
.close-lightbox {
  position: absolute;
  top: 20px;
  right: 30px;
  color: white;
  font-size: 40px;
  font-weight: bold;
  cursor: pointer;
  transition: 0.3s;
}
.close-lightbox:hover { color: #bbb; }

/* site background */
body {
  background-color: #141414;
  color: #d6d6d6;
  margin: 0;
}

/* background band layout */
.page-background-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  z-index: -1;
}
.page-background-wrapper .bg-column {
  flex: 1;
  background-color: #1a1a1a;
}
.page-background-wrapper .bg-column.middle {
  flex: 1.8;
  background-color: #1f1f1f;
}

/* overall layout */
.glove-layout-wrapper {
  display: flex;
  flex-wrap: wrap;
  gap: 3rem;
  justify-content: center;
  align-items: center;
  margin-top: 2rem;
  flex-direction: row-reverse;
}
.glove-column {
  display: flex;
  flex-direction: column;
  gap: 2.2rem;
  flex-shrink: 0;
  align-items: center;
}

/* ─── glove variants container ─── */
.product-form__input--pill {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  gap: 0.8rem;
  padding: 0;
  border-radius: 12px;
  background: transparent;
  width: 100%;              /* make it same width as info box */
  max-width: 480px;         /* constrain to same max */
  margin-left: -13.5rem;    /* ← align with quantity */
  margin-bottom: 1rem;
}
.product-form__input--pill::before {
  content: "Choose Your Gloves";
  display: block;
  width: 100%;
  font-size: 2rem;
  font-weight: 600;
  color: #000000;
  margin-bottom: 0.5rem;         /* updated: small gap */
  padding-bottom: 0;             /* updated: remove underline padding */
  border-bottom: none;           /* updated: no border */
}

/* ─── Variant Pills ─── */
.product-form__input--pill input[type='radio'] {
  position: absolute;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  overflow: hidden;
}
.product-form__input--pill input[type='radio'] + label {
  position: relative;
  display: block;                     /* full-width */
  width: 100%;
  padding: 1.2rem 1.6rem;
  font-size: 1.7rem;
  letter-spacing: 0.02rem;
  border-radius: 6px;
  background: #d6d6d6;
  color: #000000;
  border: 1px solid #d4d4d4;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: none;
    border: 1px solid #AAAAAA;
}
.product-form__input--pill input[type='radio'] + label::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background: transparent;
  pointer-events: none;
  z-index: 0;
}
.product-form__input--pill input[type='radio']:hover + label {
  transform: none;
  box-shadow: 0 0 0 2px rgba(0,0,0,0.05);
  border-color: #b6b6b6;
}
.product-form__input--pill input[type='radio']:checked + label {
  background: #FFF7ED;           /* light orange fill */
  color: #000000;
  transform: none;
  border: 2px solid #FF7A00;     /* bright orange outline */
  box-shadow: none;              /* no additional glow */
}

/* ─── quantity selector ─── */
.quantity-selector {
  font-family: Helvetica, Arial, sans-serif;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  margin-top: 1rem;      /* bump it down from variants */
  margin-bottom: 2rem;
  margin-left: -13.5rem;
  width: 100%;
  max-width: 480px;
  position: relative;
}
.quantity-selector::after {
  content: "";
  display: block;
  width: 100%;
  height: 1px;
  background: #000;
  margin-top: 1rem;
}
.quantity-label {
  font-size: 2rem;
  font-weight: 600;
  letter-spacing: 0.05rem;
  margin-bottom: 1rem;
  color: #000;
}

/* ─── new plus/minus controls ─── */
.quantity-controls {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.quantity-btn,
.quantity-value {
  width: 4.8rem;
  height: 4.8rem;
  border-radius: 6px;
  font-size: 1.8rem;
  font-weight: 700;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  transition: background 0.2s ease;
}

/* minus/plus */
.quantity-btn {
  background: #d6d6d6;
  color: #333;
  cursor: pointer;

}
.quantity-btn:hover:not(:disabled) {
  background: #E0E0E0;
}
.quantity-btn:disabled {
  opacity: 0.4;
  cursor: not-allowed;
}

/* current value */
.quantity-value {
  background: #d6d6d6;  /* same as your ± buttons */
  color: #333;          /* to match their text color */
  pointer-events: none;
    border: 1px solid #AAAAAA;
}



/* ─── preorder buttons ─── */
.preorder-buttons {
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
  width: 100%;
  max-width: 480px;         /* constrain to same max */
  margin-left: -13.5rem;    /* ← align with quantity */
}
.btn-preorder,
.btn-crypto {
  flex: 1;
  padding: 1.8rem 3.2rem;
  font-size: 1.9rem;
  letter-spacing: 0.03rem;
  font-weight: 600;
  text-align: center;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.25s ease;
  border: none;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  display: flex;
  align-items: center;
  justify-content: center;
  color: #ffffff;
}

.btn-preorder {
  background: #FF7A00;
}
.btn-preorder:hover {
  background: #E96C00;
}
.btn-crypto {
  background: #9A4DFF;
}
.btn-crypto:hover {
  background: #873EEF;
}

/* ─── re-center and control layout ─── */
.glove-viewer {
  display: flex !important;
  justify-content: center;
  
}
.viewer-container {
  width: 100%;
  max-width: 800px;
}
.viewer-img {
  width: 88%;
  border-radius: 14px;
  border: 2.816px solid #000000;
  transition: none !important;
  will-change: auto;
}
  
.viewer-img:hover {
  transform: none !important;
}
.viewer-img.animate {
  animation: none !important;
}

/* ─── viewer controls ─── */
.viewer-controls {
  margin-top: 1rem;                     /* updated: reduce vertical gap */
  display: flex;
  justify-content: space-between;       /* updated: spread buttons and counter */
  align-items: center;                  /* updated: vertical center */
  width: 88%;                           /* updated: match image width */
  max-width: 800px;
  margin-left: auto;                    /* updated: center within container */
  margin-right: auto;                   /* updated: center within container */
  gap: 0;                               /* updated: no explicit gap */
  transform: translateX(-49px);    /* ← shift left by 50px; tweak this value */
}

/* ─── viewer nav (prev/next/angle) ─── */
.viewer-nav {
  background: #E8E8E8;                  /* updated: slightly darker grey */
  border: none;                         /* unchanged */
  border-radius: 6px;                   /* unchanged */
  padding: 0.7rem 1.4rem;               /* updated: tighter padding */
  cursor: pointer;                      /* unchanged */
  transition: background 0.2s;          /* updated: only background transition */
  font-family: 'Inter', sans-serif;     /* unchanged */
  font-weight: 400;                     /* updated: normal text weight */
  font-size: 1.6rem;                    /* updated: larger text size */
  color: #333333;                       /* unchanged */
}
.viewer-nav.icon-only {
  padding: 0.7rem;                      /* updated: match main buttons */
  width: 3.2rem;                        /* unchanged */
  font-size: 1.6rem;                    /* updated: consistent icon size */
  text-align: center;                   /* unchanged */
}
.viewer-nav:hover:not(:disabled) {
  background: #DCDCDC;                  /* updated: subtle darker on hover */
  color: #333333;                       /* unchanged */
  transform: none;                      /* updated: remove scale */
}

.viewer-nav:disabled {
  cursor: default;
  opacity: 0.4;
  transform: none;
}

/* name display */
.preview-title {
  font-size: 2.2rem;
  font-weight: 800;
  color: #54504f;
  margin-bottom: 1.2rem;
  letter-spacing: -0.5px;
  display: block;
}
.blurred-name {
  opacity: 0.25;
  filter: blur(2px);
  color: #888;
}
.active-name {
  font-size: 2.8rem;
  font-weight: 900;
  color: #000;
  transition: all 0.2s ease;
}
.clickable-name {
  cursor: pointer;
  transition: all 0.2s ease;
}
.clickable-name:hover {
  opacity: 0.8;
  transform: translateX(4px);
}
.active-name:hover {
  transform: scale(1.05);
}

/* responsive adjustments */
@media (max-width: 900px) {
  .glove-layout-wrapper { flex-direction: column; }
  .glove-viewer { flex-direction: column; }
  .preorder-buttons { width: 100%; max-width: 480px; }
}
.blurred-name:empty { display: none !important; }

/* highlighted span */
.highlighted {
  font-weight: bold;
  color: #000000;
}

/* ─── image counter ─── */
#imageCounter {
  display: inline-block;    /* make width honor the value below */
  width: 7ch;               /* roughly “Angle 8” width; adjust if needed */
  text-align: center;       /* center the text within that fixed box */
  color: #333333;
  margin: 0 1.6rem;
  font-weight: 400;
}



  /* move left angle nearer “Previous” */
#angleLeftBtn {
  transform: translateX(8rem) !important;
}

/* move right angle nearer “Next” */
#angleRightBtn {
  transform: translateX(-8rem) !important;
}
 
}

/* ========== light-box overlay ========== */
.lightbox            { display:none; position:fixed; inset:0; z-index:1000;
                       background:rgba(0,0,0,.92); place-items:center; }
.lightbox.active     { display:grid; }

.lightbox-content    { max-width:92vw; max-height:92vh; position:relative; }
#lightbox-img        { max-width:100%; max-height:92vh; border-radius:10px;
                       box-shadow:0 0 40px rgba(0,0,0,.7); transition:transform .35s ease; }

.close-lightbox      { position:absolute; top:22px; right:32px; font-size:46px;
                       font-weight:700; color:#fff; cursor:pointer; }

.lightbox-instruction{ position:absolute; bottom:18px; left:50%; translate:-50% 0;
                       font:600 1.6rem/1 Inter, sans-serif; color:#fff; opacity:.8; }

/* ========== hover hint on thumbnails ========== */
.viewer-img:hover    { transform:scale(1.015); transition:transform .35s ease; cursor:pointer; }

  /* ===========================================================
   1. Hover cue for the main viewer image
   =========================================================== */
.viewer-img{
  /* override the old “transition: none !important;” rule */
  transition: transform .35s ease !important;
}
.viewer-img:hover{
  /* subtle enlarge so visitors know it’s clickable */
  transform: scale(1.03) !important;
}

/* ===========================================================
   2. Arrow-keys helper — centred horizontally, bottom-aligned
   =========================================================== */
.lightbox-instruction{
  /* position */
  top: auto            !important;     /* cancel any top centring */
  bottom: 2rem         !important;     /* 2 rem above bottom edge */
  left: 62%;                 /* 50 % = exact centre … 60 % pushes it right */
  transform: translateX(-50%);  /* keep it horizontally centred on its new anchor */

  /* appearance */
  color: #000          !important;     /* same deep black as old site */
  text-shadow: none    !important;     /* keep it crisp */
}

  /* ─── overlay navigation arrows ─── */
.overlay-nav{
  position:absolute; top:50%; translate:0 -50%;
  width:48px; aspect-ratio:1; border-radius:50%;
  background:#fff; color:#333; font:700 2.4rem/1 "Inter",sans-serif;
  display:flex; align-items:center; justify-content:center;
  box-shadow:0 4px 12px rgba(0,0,0,.15);
  border:none; cursor:pointer; opacity:0; transition:opacity .25s ease;
}
.arrow-left  { left:16px; }
.arrow-right { right:16px; }
.viewer-container:hover .overlay-nav{ opacity:1; }   /* appear on hover */
.overlay-nav:hover{ background:#f2f2f2; }

/* ─── progress dots ─── */
.dot-container{
  position:relative; margin:28px auto 6px;
  display:flex; gap:8px; justify-content:center;
}
.dot-container .dot{
  width:8px; height:8px; border-radius:50%; background:#c8cdd2;
  transition:all .25s ease; cursor:pointer;
}
.dot-container .dot.active{
  width:36px; border-radius:4px; background:#0060ff; transform:translateY(-1px);
}

/* suppress the old “1 / 8” counter */
#imageCounter{ display:none !important; }
</style>


<script>
/* -----------------------------------------------------------
   1. Tiny header-message click (unchanged)
----------------------------------------------------------- */
document.addEventListener('DOMContentLoaded', () => {
  const deliveryMessage = document.querySelector('.free-delivery-message');
  if (deliveryMessage) {
    deliveryMessage.addEventListener('click', () =>
      deliveryMessage.classList.toggle('clicked')
    );
  }
});

/* -----------------------------------------------------------
   2. MAIN LOGIC
----------------------------------------------------------- */
document.addEventListener('DOMContentLoaded', () => {

  /* ---------- 2-A. Light-box + zoom engine ---------- */
  const accessoryImg = document.getElementById('accessory-img');
  const viewerImg    = document.getElementById('viewer-img');

  const lightbox     = document.getElementById('lightbox');
  const lightboxImg  = document.getElementById('lightbox-img');
  const closeBtn     = document.querySelector('.close-lightbox');

  let zoomed = false;
  const openBox  = src => { lightboxImg.src = src; lightbox.classList.add('active'); resetZoom(); };
  const closeBox = ()   => { lightbox.classList.remove('active'); resetZoom(); };
  const resetZoom = ()  => { lightboxImg.style.transform='scale(1)'; zoomed=false; };

  viewerImg   && viewerImg  .addEventListener('click', () => openBox(viewerImg.src));
  accessoryImg&& accessoryImg.addEventListener('click', e => openBox(e.target.src));

  closeBtn    && closeBtn.addEventListener   ('click', closeBox);
  lightbox.addEventListener('click', e => { if (e.target === lightbox) closeBox(); });

  lightboxImg.addEventListener('click', e => {
    if (!zoomed) {
      const r = lightboxImg.getBoundingClientRect();
      const x = ((e.clientX - r.left) / r.width ) * 100;
      const y = ((e.clientY - r.top ) / r.height) * 100;
      lightboxImg.style.transformOrigin = `${x}% ${y}%`;
      lightboxImg.style.transform       = 'scale(2)';
      zoomed = true;
    } else resetZoom();
  });

  document.addEventListener('keydown', e => {
    if (!lightbox.classList.contains('active')) return;
    if (e.key === 'Escape')     return closeBox();
    if (e.key === 'ArrowLeft')  { prevBtn.click();  e.preventDefault(); }
    if (e.key === 'ArrowRight') { nextBtn.click();  e.preventDefault(); }
  });

  /* ---------- 2-B. IMAGE DATA ---------- */
  const urls = {
    vice: [
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/MiamiDarrylFigurine_ViceGloves_1.jpg?v=1750332554",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/vice_fade.jpg?v=1749907969",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/vice_arabesque.jpg?v=1749907724",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/vice_hotrod.jpg?v=1749907940",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/vice_bluephosphor.jpg?v=1749907774",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/vice_ruby.jpg?v=1749907792",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/vice_emerald.jpg?v=1749908821",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/vice_sapphire.jpg?v=1750008665"
    ],
    pandora: [
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/MiamiDarrylFigurine_PandorasBox_1.jpg?v=1750332619",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/pandora_fade.jpg?v=1749907926",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/pandora_arabesque.jpg?v=1749918916",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/pandora_hotrod.jpg?v=1749907952",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/pandora_bluephosphor.jpg?v=1749907839",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/pandora_ruby.jpg?v=1749908644",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/pandora_emerald.jpg?v=1749907913",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/pandora_sapphire.jpg?v=1750008691"
    ],
    hedge: [
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/MiamiDarrylFigurine_HedgeMaze_1.jpg?v=1750332352",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/hedge_fade.jpg?v=1749907822",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/hedge_arabesque.jpg?v=1749907808",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/hedge_hotrod.jpg?v=1749908427",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/hedge_bluephosphor.jpg?v=1749907985",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/hedge_ruby.jpg?v=1749908002",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/hedge_emerald.jpg?v=1749908692",
      "https://cdn.shopify.com/s/files/1/0745/6482/9415/files/hedge_sapphire.jpg?v=1750008689"
    ]
  };

  const gloves = {
    vice:    ["Vice Gloves", "AWP | Fade", "AK-47 | Gold Arabesque", "M4A1-S | Hot Rod", "M4A1-S | Blue Phosphor", "★ Karambit | Ruby", "★ Karambit | Emerald", "★ M9 Bayonet | Sapphire"],
    pandora: ["Pandora's Box Gloves", "AWP | Fade", "AK-47 | Gold Arabesque", "M4A1-S | Hot Rod", "M4A1-S | Blue Phosphor", "★ Karambit | Ruby", "★ Karambit | Emerald", "★ M9 Bayonet | Sapphire"],
    hedge:   ["Hedge Maze Gloves", "AWP | Fade", "AK-47 | Gold Arabesque", "M4A1-S | Hot Rod", "M4A1-S | Blue Phosphor", "★ Karambit | Ruby", "★ Karambit | Emerald", "★ M9 Bayonet | Sapphire"]
  };

  /* ---------- 2-C. State ---------- */
  let currentGlove = 'pandora';
  let currentSet   = urls[currentGlove];
  let nameSet      = gloves[currentGlove];
  let index        = 0;

/* ─── change TO ─── */
const imageCounter  = document.getElementById('imageCounter');
const dotContainer  = document.getElementById('dotContainer');   // NEW
const currentName   = document.getElementById('currentName');
const prevName      = document.getElementById('prevName');
const nextName      = document.getElementById('nextName');
  
  const prevBtn       = document.getElementById('prevBtn');
  const nextBtn       = document.getElementById('nextBtn');

  /* ─── add right AFTER the DOM-ref block ─── */
function buildDots(){
  dotContainer.innerHTML = '';
  currentSet.forEach((_, i) =>{
    const d = document.createElement('span');
    d.className = 'dot' + (i === index ? ' active' : '');
    d.addEventListener('click', () => { index = i; updateImage(); });
    dotContainer.appendChild(d);
  });
}

  /* ---------- 2-E. Render helper ---------- */
  function updateImage() {
    viewerImg.classList.add('animate');
    setTimeout(() => {
      viewerImg.src   = currentSet[index];
      if (lightbox.classList.contains('active')) lightboxImg.src = currentSet[index];

      viewerImg.onload = () => viewerImg.classList.remove('animate');
     dotContainer.querySelectorAll('.dot')
            .forEach((d,i)=>d.classList.toggle('active', i===index));

      currentName.textContent = nameSet[index];
      prevName.textContent    = nameSet[(index - 1 + nameSet.length) % nameSet.length];
      nextName.textContent    = nameSet[(index + 1) % nameSet.length];
    }, 100);
  }

  /* ---------- 2-F. Carousel buttons ---------- */
  prevBtn.addEventListener('click', () => { index = (index - 1 + currentSet.length) % currentSet.length; updateImage(); });
  nextBtn.addEventListener('click', () => { index = (index + 1) % currentSet.length; updateImage(); });

  prevName.addEventListener('click', () => prevBtn.click());
  nextName.addEventListener('click', () => nextBtn.click());
  currentName.addEventListener('click', updateImage);

  /* ---------- 2-H. Quantity selector ---------- */
  const qtyOptions = document.querySelectorAll('.quantity-option');
  qtyOptions.forEach(opt => {
    opt.addEventListener('click', () => {
      qtyOptions.forEach(o => o.classList.remove('selected'));
      opt.classList.add('selected');
    });
  });

  /* ---------- 2-I. Initial render ---------- */
updateImage();     // paint first image + names
buildDots();       // NEW ­– render the dot bar
});                // (end of DOMContentLoaded)
</script>


