{% comment %}
  Product Page Template for Shopify
  Place this file in your theme's templates folder as product.liquid
{% endcomment %}

<div class="dark-product-page">
  <header class="dark-product-header">
    <div class="brand">CS2WORKS</div>
    <a href="/pages/contact" class="contact-btn">Contact</a>
  </header>
  <div class="dark-product-main">
    <div class="dark-product-gallery">
      <div class="gallery-sticky">
        <img id="main-product-image" src="{{ product.featured_image | img_url: '800x800' }}" alt="{{ product.featured_image.alt | default: product.title }}" class="gallery-img" />
        {% if product.images.size > 1 %}
        <div class="gallery-thumbs">
          {% for image in product.images %}
            <img src="{{ image | img_url: '200x200' }}" alt="{{ image.alt | default: product.title }}" class="gallery-thumb" onclick="setCurrentImage({{ forloop.index0 }})" data-index="{{ forloop.index0 }}" />
          {% endfor %}
        </div>
        {% endif %}
      </div>
    </div>
    <div class="dark-product-info">
      <div class="product-badge">Limited Edition</div>
      <h1 class="product-title">{{ product.title }}</h1>
      <div class="product-desc">{{ product.description }}</div>
      <div class="product-price-row">
        <span id="variant-price" class="product-price">{{ product.selected_or_first_available_variant.price | money }}</span>
        {% if product.selected_or_first_available_variant.compare_at_price > product.selected_or_first_available_variant.price %}
        <span id="variant-compare-price" class="product-compare">{{ product.selected_or_first_available_variant.compare_at_price | money }}</span>
        {% endif %}
      </div>
      <form action="/cart/add" method="post" enctype="multipart/form-data" id="product-form">
        {% unless product.has_only_default_variant %}
        <div class="product-variants">
          {% for option in product.options_with_values %}
          <div class="variant-group">
            <div class="variant-label">{{ option.name }}</div>
            <div class="variant-options">
              {% for value in option.values %}
              <label class="variant-radio">
                <input type="radio" name="options[{{ option.name | handleize }}]" value="{{ value | escape }}" class="variant-selector" data-option-position="{{ option.position }}" data-option-value="{{ value | escape }}" {% if option.selected_value == value %}checked{% endif %} />
                <span>{{ value }}</span>
              </label>
              {% endfor %}
            </div>
          </div>
          {% endfor %}
        </div>
        {% endunless %}
        <div class="product-qty-row">
          <div class="variant-label">Quantity</div>
          <div class="qty-btns">
            {% for i in (1..5) %}
            <button type="button" onclick="setQuantity({{ i }})" class="qty-btn" data-quantity="{{ i }}">{{ i }}</button>
            {% endfor %}
          </div>
        </div>
        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" id="variant-id">
        <input type="hidden" name="quantity" value="1" id="quantity-input">
        <div class="product-actions">
          <button type="submit" id="add-to-cart-btn" class="add-to-cart-btn" {% unless product.available %}disabled{% endunless %}>
            <span id="add-to-cart-text">{% if product.available %}Add to Cart{% else %}Sold Out{% endif %}</span>
          </button>
          <button type="button" onclick="buyNow()" id="buy-now-btn" class="buy-now-btn" {% unless product.available %}disabled{% endunless %}>Buy Now</button>
        </div>
      </form>
      <div class="product-trust-row">
        <div class="trust-badge">üîí Secure Payment</div>
        <div class="trust-badge">üöö Fast Shipping</div>
        <div class="trust-badge">üéüÔ∏è Authenticity Guaranteed</div>
      </div>
    </div>
  </div>
</div>

<style>
.dark-product-page {
  background: #18122b;
  color: #f3f0ff;
  min-height: 100vh;
  font-family: 'Inter', 'Segoe UI', Arial, sans-serif;
}
.dark-product-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #221a38;
  padding: 2rem 3vw 1.5rem 3vw;
  border-bottom: 1px solid #2d2346;
  position: sticky;
  top: 0;
  z-index: 10;
}
.dark-product-header .brand {
  font-size: 2rem;
  font-weight: 700;
  color: #a259ec;
  letter-spacing: 0.08em;
}
.dark-product-header .contact-btn {
  background: #a259ec;
  color: #fff;
  padding: 0.9rem 2.2rem;
  border-radius: 8px;
  font-weight: 600;
  text-transform: uppercase;
  font-size: 1.1rem;
  border: none;
  transition: background 0.18s;
}
.dark-product-header .contact-btn:hover {
  background: #7c3aed;
}
.dark-product-main {
  display: flex;
  flex-direction: column;
  gap: 3rem;
  max-width: 1100px;
  margin: 3rem auto 0 auto;
  padding: 0 3vw;
}
@media (min-width: 900px) {
  .dark-product-main {
    flex-direction: row;
    align-items: flex-start;
    gap: 4rem;
  }
  .dark-product-gallery { flex: 1.1; }
  .dark-product-info { flex: 1.2; }
}
.dark-product-gallery .gallery-sticky {
  position: sticky;
  top: 6.5rem;
}
.gallery-img {
  width: 100%;
  border-radius: 18px;
  background: #221a38;
  box-shadow: 0 4px 32px #0002;
  border: 2px solid #2d2346;
  margin-bottom: 1.2rem;
}
.gallery-thumbs {
  display: flex;
  gap: 0.7rem;
  margin-top: 0.5rem;
}
.gallery-thumb {
  width: 48px;
  height: 48px;
  object-fit: cover;
  border-radius: 8px;
  border: 2px solid #2d2346;
  background: #221a38;
  cursor: pointer;
  opacity: 0.7;
  transition: border 0.18s, opacity 0.18s;
}
.gallery-thumb.selected, .gallery-thumb:hover {
  border: 2px solid #a259ec;
  opacity: 1;
}
.dark-product-info {
  background: #221a38;
  border-radius: 18px;
  box-shadow: 0 2px 16px #0003;
  padding: 2.5rem 2rem 2rem 2rem;
  border: 1.5px solid #2d2346;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}
.product-badge {
  background: #a259ec22;
  color: #a259ec;
  font-weight: 700;
  font-size: 1.1rem;
  padding: 0.5rem 1.2rem;
  border-radius: 999px;
  display: inline-block;
  margin-bottom: 0.7rem;
}
.product-title {
  font-size: 2.3rem;
  font-weight: 700;
  margin-bottom: 0.7rem;
  color: #fff;
}
.product-desc {
  color: #b8b3d1;
  font-size: 1.15rem;
  margin-bottom: 1.2rem;
}
.product-price-row {
  display: flex;
  align-items: baseline;
  gap: 1.2rem;
  margin-bottom: 1.2rem;
}
.product-price {
  font-size: 2.1rem;
  font-weight: 700;
  color: #a259ec;
}
.product-compare {
  font-size: 1.2rem;
  color: #b8b3d1;
  text-decoration: line-through;
}
.product-variants, .product-qty-row {
  margin-bottom: 1.2rem;
}
.variant-group {
  margin-bottom: 0.7rem;
}
.variant-label {
  font-size: 1.1rem;
  font-weight: 600;
  color: #f3f0ff;
  margin-bottom: 0.4rem;
}
.variant-options {
  display: flex;
  gap: 0.7rem;
}
.variant-radio {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background: #18122b;
  border: 1.5px solid #2d2346;
  border-radius: 8px;
  padding: 0.7rem 1.3rem;
  cursor: pointer;
  color: #f3f0ff;
  font-weight: 500;
  font-size: 1.1rem;
  transition: border 0.18s, background 0.18s;
}
.variant-radio input[type="radio"] {
  display: none;
}
.variant-radio input[type="radio"]:checked + span, .variant-radio input[type="radio"]:checked ~ span {
  color: #a259ec;
  font-weight: 700;
}
.variant-radio input[type="radio"]:checked ~ span {
  border-bottom: 2px solid #a259ec;
}
.variant-radio input[type="radio"]:checked ~ span, .variant-radio:hover span {
  color: #a259ec;
}
.qty-btns {
  display: flex;
  gap: 0.7rem;
}
.qty-btn {
  width: 44px;
  height: 44px;
  border-radius: 10px;
  background: #18122b;
  color: #f3f0ff;
  border: 1.5px solid #2d2346;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: border 0.18s, background 0.18s, color 0.18s;
}
.qty-btn.selected, .qty-btn:hover {
  background: #a259ec;
  color: #fff;
  border: 1.5px solid #a259ec;
}
.product-actions {
  display: flex;
  gap: 1.2rem;
  margin-top: 1.2rem;
}
.add-to-cart-btn, .buy-now-btn {
  flex: 1;
  padding: 1.1rem 0;
  border-radius: 10px;
  font-size: 1.15rem;
  font-weight: 700;
  border: none;
  background: #a259ec;
  color: #fff;
  box-shadow: 0 2px 8px #a259ec33;
  cursor: pointer;
  transition: background 0.18s, box-shadow 0.18s;
}
.add-to-cart-btn:hover, .buy-now-btn:hover {
  background: #7c3aed;
  box-shadow: 0 4px 16px #7c3aed33;
}
.add-to-cart-btn[disabled], .buy-now-btn[disabled] {
  background: #2d2346;
  color: #b8b3d1;
  cursor: not-allowed;
  opacity: 0.7;
}
.product-trust-row {
  display: flex;
  gap: 1.2rem;
  margin-top: 2rem;
  justify-content: flex-start;
}
.trust-badge {
  background: #18122b;
  color: #a259ec;
  border: 1.5px solid #2d2346;
  border-radius: 8px;
  padding: 0.6rem 1.2rem;
  font-size: 1rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
@media (max-width: 900px) {
  .dark-product-main { flex-direction: column; }
  .dark-product-gallery, .dark-product-info { width: 100%; }
}
</style>

<script>
const productImages = [
  {% for image in product.images %}
  { url: "{{ image | img_url: '800x800' }}", alt: "{{ image.alt | default: product.title | escape }}" }{% unless forloop.last %},{% endunless %}
  {% endfor %}
];
let currentImageIndex = 0;
function setCurrentImage(index) {
  currentImageIndex = index;
  const mainImage = document.getElementById('main-product-image');
  if (mainImage && productImages[currentImageIndex]) {
    mainImage.src = productImages[currentImageIndex].url;
    mainImage.alt = productImages[currentImageIndex].alt;
  }
  document.querySelectorAll('.gallery-thumb').forEach((thumb, idx) => {
    if (idx === index) thumb.classList.add('selected');
    else thumb.classList.remove('selected');
  });
}
const productVariants = [
  {% for variant in product.variants %}
  {
    id: {{ variant.id }},
    price: {{ variant.price }},
    compare_at_price: {{ variant.compare_at_price | default: 0 }},
    available: {{ variant.available | json }},
    title: "{{ variant.title | escape }}",
    options: [ {% for option in variant.options %}"{{ option | escape }}"{% unless forloop.last %},{% endunless %}{% endfor %} ]
  }{% unless forloop.last %},{% endunless %}
  {% endfor %}
];
let selectedQuantity = 1;
let currentVariant = productVariants[0];
function setQuantity(quantity) {
  selectedQuantity = quantity;
  document.getElementById('quantity-input').value = quantity;
  document.querySelectorAll('.qty-btn').forEach(btn => {
    const btnQuantity = parseInt(btn.dataset.quantity);
    if (btnQuantity === quantity) btn.classList.add('selected');
    else btn.classList.remove('selected');
  });
}
function updateSelectedVariant() {
  const selectedOptions = [];
  document.querySelectorAll('.variant-selector:checked').forEach(input => {
    selectedOptions[input.dataset.optionPosition - 1] = input.dataset.optionValue;
  });
  const matchingVariant = productVariants.find(variant => {
    return variant.options.every((option, index) => option === selectedOptions[index]);
  });
  if (matchingVariant) {
    currentVariant = matchingVariant;
    document.getElementById('variant-id').value = matchingVariant.id;
    const priceElement = document.getElementById('variant-price');
    const comparePriceElement = document.getElementById('variant-compare-price');
    if (priceElement) {
      priceElement.textContent = new Intl.NumberFormat('en-US', { style: 'currency', currency: '{{ cart.currency.iso_code }}' }).format(matchingVariant.price / 100);
    }
    if (comparePriceElement && matchingVariant.compare_at_price > matchingVariant.price) {
      comparePriceElement.textContent = new Intl.NumberFormat('en-US', { style: 'currency', currency: '{{ cart.currency.iso_code }}' }).format(matchingVariant.compare_at_price / 100);
      comparePriceElement.style.display = 'inline';
    } else if (comparePriceElement) {
      comparePriceElement.style.display = 'none';
    }
    const addToCartBtn = document.getElementById('add-to-cart-btn');
    const addToCartText = document.getElementById('add-to-cart-text');
    const buyNowBtn = document.getElementById('buy-now-btn');
    if (matchingVariant.available) {
      addToCartBtn.disabled = false;
      buyNowBtn.disabled = false;
      addToCartText.textContent = 'Add to Cart';
      addToCartBtn.classList.remove('disabled');
      buyNowBtn.classList.remove('disabled');
    } else {
      addToCartBtn.disabled = true;
      buyNowBtn.disabled = true;
      addToCartText.textContent = 'Sold Out';
      addToCartBtn.classList.add('disabled');
      buyNowBtn.classList.add('disabled');
    }
  }
}
function buyNow() {
  if (!currentVariant.available) return;
  const form = document.getElementById('product-form');
  fetch('/cart/add.js', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ id: currentVariant.id, quantity: selectedQuantity })
  })
  .then(response => response.json())
  .then(data => { window.location.href = '/checkout'; })
  .catch(error => { alert('There was an error adding the product to cart.'); });
}
document.addEventListener('DOMContentLoaded', function() {
  setCurrentImage(0);
  setQuantity(1);
  updateSelectedVariant();
  document.querySelectorAll('.variant-selector').forEach(input => {
    input.addEventListener('change', updateSelectedVariant);
  });
});
</script>
